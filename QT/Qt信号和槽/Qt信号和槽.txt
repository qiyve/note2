QT： 
   
    历史： 
    1991年QT最早由奇趣科技开发

     一个跨平台的C++图形用户界面应用程序框架，他为应用程序开发者提供建立艺术级图形界面所需的所有功能。
     他是完全面向对象的，很容易扩展，并且允许真正的组件编程

   优点：
             1.跨平台，
             2.一定程度上简化了内存回收机制，
             3.开发效率高，能够快速的构建应用程序，
             4.可以进行嵌入式开发
             5.接口简单易上手

   成功案例：
            1.Linux 桌面环境 KDE ，
            2. WPS 
            3. 谷歌地图
            
创建第一个QT程序
           1. 点击创建项目后，选择项目路径 以及给项目起名称
           2. 名称  不能有中文  不能有空格
           3. 路径  不能有中文  不能有空格
           4. 默认创建有窗口类，myWidget，基类有三种选择 ：QWidget、QMainWindow、QDialog
    main函数:
           1. QApplication  a  应用程序对象 有且仅有一个
           2. myWidget w 实例化窗口对象
           3. w.show()  调用show函数  显示窗口     默认是以顶层显示
           4. return a.exec() 让应用程序对象进入消息循环机制中，代码阻塞到当前


   按钮控件常用API:
           1.创建 QPushButton* btn = new QPushButton 
           2.设置父亲  setParent(this)
           3.设置文本  setText("文字")
           4.设置位置  move(宽，高)
           5.重新指定窗口大小 resize
           6.设置新窗口标题  setWindowTitle
           7.设置窗口固定大小  setFixedSize


 对象树：
           1.当创建的对象在堆区时候，如果指定的父亲是 QObject 派生下来的类 或者 QObject 子类派生下来的类
             可以不用管理释放的操作，将对象放入到对象树中
           2.一定程度上简化了内存回收机制


  Qt 中的坐标系
            1. 左上角为 0 ， 0点
            2. x 以右为正方向
            3. y 以下为正方向

 信号和槽
	1.连接函数：connect
	参数
	     参数1：信号的发送者
	     参数2：发送的信号 ( 函数的地址）
	     参数3：信号的接收者	
	     参数4：处理的槽函数 （函数的地址）
	  2.松散耦合
	  3.实现 点击按钮 关闭窗口的案例
	  4.connect(btn, &QPushButton::click, this, &QWidget::close)

自定义信号和槽
       1.自定义信号
	1.1 写到signals 下
	1.2 返回 void
	1.3 需要声明，不需要实现
	1.4 可以有参数，可以重载 
        2.自定义槽函数
	2.1 返回 void
	2.2 需要声明，也需要实现
	2.3 可以有参数，可以重载
	2.4 写到 public slot 下 或者 public 或者全局函数
        3. 触发自定义的信号	
	3.1 emit
        4. 案例 下课后，老师触发饿了信号，学生相应信号，请客吃饭

当自定义的信号和槽出现重载
        1.需要利用函数指针，明确指向函数的地址
        2.void （Teacher:: * tSignal)(QString) = &Teacher::hungry
        3.QString 转成 char* 	
	3.1 .ToUtf8() 转成QByteArray 
	3.2 .Data() 转成 char *

         4.信号可以连接信号
         5 .断开信号 disconnect
   拓展 ：
          1. 信号可以连接信号
          2. 一个信号可以连接多个槽函数
          3. 多个信号可以连接同一个槽函数
          4. 信号和槽函数的参数 必须一一对应
          5. 信号的参数个数 可以多余  槽函数参数个数
          6. 信号槽可以断开连接 disconnect
 
   Qt4版本写法
           1. connect(信号的发送者，发送的信号 SIGNAL(信号），信号接收者，槽函数SLOT(槽函数））；
           2. 优点： 参数直观， 缺点：编译器不会检测参数类型
           3. Qt5以上  支持Qt4的版本写法 反之不支持

Lambda 表达式  [] () {}

           1.  [] 标识符  匿名函数
	1.1 = 值传递
	1.2 & 引用传递
           2.  () 参数
           3.  {} 实现体
           4. mutable 修饰 值传递变量， 可以修改拷贝出的数据，改变不了本体
           5. 返回值 [] () ->int {} 


    练习： 创建两个按钮   一个open 创建一个新窗口 一个close 关闭新窗口




















































































