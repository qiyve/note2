1、C语言概述

  1.1.1C 语言优点：

       - 代码量少
       - 执行速度快
       - 功能强大
       - 编程自由
     
     缺点：
  
       - 写代码实现周期长
       - 可移植性较差
       - 过于自由，经验不足易出错
       - 对平台库依赖较多

   1.1.2 C语言应用领域

     C语言的应用极其广泛，从网站后台，到底层操作系统，从多媒体应用到大型网络游戏，均可以使用C语言来开发
       
       - C语言可以写网站后台程序
       - C语言可以专门针对某个主题写出功能强大的程序库
       - C语言可以写出大型游戏的引擎
       - C语言可以写出另一个语言来
       - C语言可以写操作系统和驱动程序，并且只能用C语言编写
       - 任何设备只要配置了微处理器，就都支持C语言，从微波炉到手机，
          都是由擦语言技术来推动的

window中GCC 设置
找到QT安装目录：C: \QT \QT5.4.1 \5.4 \mingw491_30 \bin C: \QT \QT5.4.1 \Tools \ming491_32\bin  
在我的电脑右击选择属性，在高级系统设置选择环境变量，在系统PATH 下将目录添加  

gcc编译过程：
gcc -c  hello.exe  hello.c

Qt使用：

选择菜单栏“工具”--》”选项“--》”构建和运行“，在”概念“选项 下面找到”Default build directory“
点击后面的”reset“按钮，之后关闭Qt，在重新打开 即可


   1.2 system函数
  
     功能：已经运行的程序中执行另一个外部程序
     参数：外部可执行程序名字
     返回值： 成功 0； 失败任意数字


  1.3 C语言编译过程

   1.3.1 C程序编译过程

     C代码编译成执行程序经过4步：

       1.预处理：宏定义展开、头文件展开、条件编译等，同时将代码中的注释删除，这里并不会检查语法
       2.编译：检查语法，将C语言转成汇编文件
       3.汇编：将汇编文件生成目标文件（二进制文件）
       4.链接：将C语言依赖库链接到程序中
  
常见代码问题：
1. 编辑时异常
2. 编译时异常
3. 运行时异常


汇编语言：
mov 移动
add  添加
push  压栈
pop   出栈
call    调用

eax   32位寄存器
简单的加法运算：
                 //__asm
                 //{
	 //	mov a,10
	 //	mov b,20
                 //	mov eax,a
	 //	add eax,b
	 //            mov c,eax
	 //}

断点和单步调试：
断点：在选中行单机或按F9
调试程序：在“调试”中选择“开始调试”或按F5 
逐语句执行：F11
逐过程执行：F10
跳出过程：Shift+F11
停止调试：Shift+F5

vs快捷键：

Ctrl+u，Ctrl+f :自动格式化代码
Ctrl+k，Ctrl+c：注释代码
Ctrl+j ：智能提示
Ctrl+z：后退
Ctrl+Shift+b：编译，不运行

Qt快捷键：

Ctrl+i : 自动格式化代码
Ctrl+/：注释代码
alt+Enter : 自动完成类函数定义
F4 ：.h 文件和对应.cpp 文件切换
F9：设置断点
F5 : 调试运行
Ctrl+r：编译, 但不调试运行
Ctrl+b：编译，不运行
F10 ：next 调试
F11 : step 调试





