
                       职工管理系统


   1、管理系统需求

        职工管理系统可以用来管理公司内所有员工的信息

        本教程主要利用C+ +来实现一个基于多态的职工管理系统

        公司中职工分为三类:普通员工、经理、老板，显示信息时，需要显示职工编号、职工姓名、
        职工岗位、以及职责普通员工职责:完成经理交给的任务

        经理职责:完成老板交给的任务，并下发任务给员工

        老板职责:管理公司所有事务

        管理系统中需要实现的功能如下:

       1.退出管理程序:退出当前管理系统

       2.增加职工信息:实现批量添加职工功能，将信息录入到文件中，职工信息为:职工编号、
          姓名、部门编号●显示职工信息:显示公司内部所有职工的信息

       3.删除离职职工:按照编号删除指定的职工
       
       4.修改职工信息:按照编号修改职工个人信息

       5.查找职工信息:按照职工的编号或者职工的姓名进行查找相关的人员信息

       6.按照编号排序:按照职工编号，进行排序，排序规则由用户指定

       7.清空所有文档:清空文件中记录的所有职工信息(清空前需要再次确认，防止误删)


  2、创建项目 

          1. 创建新项目
 
          2. 添加文件


 3、创建管理类

            管理类负责的内容如下：
  
              1.与用户的沟通菜单界面

              2.对职工增删改查的操作

              3.与文件的读写交互

         3.1 创建文件

              在头文件和源文件的文件夹下分别创建 workeManager.h 和 workeManager.cpp
 
         3.2头文件实现

              在 workeManager.h 中设计管理类

         3.3源文件实现

              在workeManager.cpp中将构造函数和析构函数空实现补全


4、 菜单功能

          与用户的沟通界面

         4.1 添加成员函数

               在类管理 workeManager.h 中添加成员函数 void Show_Menu     ( 菜单函数)

        4.2  菜单功能实现

                在类管理 workeManager.cpp 中实现  void Show_Menu () 函数

        4.3 测试菜单功能


5、退出功能 

        5.1 提供功能接口

               在 main 函数中提供分支选择，提供每个功能接口

        5.2 实现退出功能

               在workeManager.h 中提供退出系统的成员函数  void exitSystem();

               在workeManager.cpp 中提供具体的功能实现

       5.3 测试功能

               在main 函数分支 0 选项中 ，调用退出程序的接口  函数 exit(0) 退出功能


6、 创建职工类

       6.1 创建职工抽象类

             职工的分类为：普通员工 、 经理 、老板

             将三种职工抽象到一个类 （worker）中，；利用多态管理不同职工种类

             职工的属性为： 职工编号  职工姓名  职工所在部门编号 
  
             职工的行为为： 岗位职工信息描述，获取岗位名称 

     6.2 创建普通员工类  

           普通员工类继承职工抽象类，并重写父类中纯虚函数
  
           在头文件和源文件的文件下分别创建 employee.h 和employee.cpp 文件

     6.3 创建经理类

            经理类继承职工抽象类，并重写父类中纯虚函数，和普通员工类似

           在头文件和源文件的文件下分别创建 manager.h 和  manager.cpp 文件

    6.4 创建老板类

          老板类类继承职工抽象类，并重写父类中纯虚函数，

          在头文件和源文件的文件下分别创建 boos.h 和  boos.cpp 文件

   6.5 测试多态

          在职工管理系统.cpp 中添加测试函数， 并且运行能够产生多态


7、添加职工 
   
   7.1 功能分析

             用户在批量创建时，可能会创建不同种类的职工

             如果想要将所有不同种类的员工都放入一个数组中，可以将所有员工的指针为维护到一个数组里

             如果想要在程序中维护这个不定长度的数组，可以将数组创建到堆区，并利用worker ** 的指针维护

   7.2 功能实现

           1.  在WorkerManager.h 头文件 添加成员属性 代码 

                 记录文件中的人数个数

                 员工数组的指针

           2.  在WorkerManager.cpp 中 初始化属性

           1.  在WorkerManager.h中添加成员函数
                  
                添加职工
           
          2. 在WorkerManager.cpp 中 实现该函数  
         
    7.3 测试添加 

8、文件交互-写文件

        功能描述：对文件进行读写
     
             在上一个添加功能中，我们只是将所有的数据添加到了内存中，
             一旦程序结束就无法保存了

             因此文件管理类中需要一个进行交互的功能，对于文件进行读写操作

     8.1 设定文件路径

             首先我们将文件按路径，在WorkerManager.h 中添加宏常量，
             并且包含含头文件 fstream 

      8.2 成员函数声明 

             在WorkerManager.h 中类里添加成员函数 void save(）

      8.3 保存文件功能实现

9、 文件交互-读文件

           功能描述：将文件中的内容读取到程序中

           虽然我们实现了添加职工后保存到文件的操作，但是每次开始运行程序，
           并没有将文件中的数据提取到程序中

           而我们的程序功能还有清空文件的需求
 
           因此构造函数初始化数据的情况分为三种

        1. 第一次使用，文件未创建

        2. 文件存在，但是数据被用户清空

        3. 文件存在，并且保存职工的所有数据

     9.1 文件未创建

          在WorkerManager.h中添加新的成员属性 m_FileIsEmpty 标志文件是否为空

          修改WorkerManager.cpp 中构造函数代码

    9.2 文件存在且数据为空

          在 WorkerManager.cpp 中的构造函数追加代码

    9.3 文件存在且保存职工数据

       1. 获取记录的职工人数
        
            在WorkerManager.h 中添加成员函数 int get_EmpNum( );

        2. 初始化数组

             根据职工的数据以及职工数据，初始化WorkerManager 中的Worker ** m_EmpArray指针

             在WorkerManager.h中添加成员函数 void init_Emp ( ) ;   //初始化员工

             在WorkerManager.cpp 中实现

             在WorkerManager.cpp构造函数中追加代码

10、显示职工
    
         功能描述 ： 显示当前所有职工信息

     10.1 显示职工函数声明
 
          在 WorkerManager.h 中添加成员函数  void Show_Emp();

     10.2 显示职工函数实现

          在WorkerManager.cpp中 实现成员函数 void Show_Emp();
      
     10.3 测试显示职工函数

11、删除职工

           功能描述：按照职工的编号进行删除职工的操作

     11.1 删除职工函数

             在WorkerManager.h 中添加成员函数 void Del_Emp();

     11.2 职工是否存在函数声明

             很多功能都需要用到根据职工是否存在来进行操作如：删除职工、修改职工
             查找职工。

              因此添加该公告函数，以便后续使用

              在WorkerManager.h 中添加成员函数 int Isexist (int id)
                    
    11.3 职工是否存在函数实现

              在Worker Manager.cpp 中事项成员函数

12、 修改职工职工功能

          功能描述 ： 能够按照职工的编号对职工信息进行修改并保存

   12.1 修改职工函数声明

           在WorkerManager.h 中添加成员函数  void Mod_Emp();

   12.2 修改职工函数实现

           在Worker Manager.cpp 中实现成员函数  void Mod_Emp();

13、查找职工

          功能描述：提供两种查找职工方式，一种按照职工编号，一种按照职工姓名

   13.1 查找职工函数声明

          在Worker Manager.h中添加成员函数 void Find_Emp();

   13.2 查找职工函数实现

         在Worker Manager.cpp中实现成员函数 void Find_Emp();

14、排序 

        功能描述： 按照职工编号进行排序，排序的顺序由用户指定

      14.1 排序函数声明 

         在WorkerManager.h中添加成员函数 void Sort_Emp();

      14.2 排序函数实现

          在WorkerManager.cpp中实现成员函数 void Sort_Emp()；

15、清空文件 
 
       功能描述 ： 将文件中记录数据清空

    15.1 清空函数声明

        在WorkerManager.h中添加成员哈函数 void Clean_File();
 
    15.2 清空函数实现

       在WorkerManager.cpp 中实现成员函数 void clean-File（）；

          首先我们先提示一下用户是否确认清空文件 避免误操作
      

      


 









