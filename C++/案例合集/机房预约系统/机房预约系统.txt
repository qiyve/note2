机房预约系统

  1、机房预约系统需求

     1.2 身份简介

        学生代表：申请使用机房

        教师： 审核学生的预约申请

        管理员：给学生。教师创建账号

    1.3机房简介

         1号机房 ：20人

          2号机房：50人

          3号机房：100人

     1.4申请简历

          申请的订单每周由管理员负责清空

          学生可以预约未来一周的机房使用，预约的日期为周一至周五，预约时需要选择预约时段（上午 下午）

          教师来审核预约，依据实际情况审核预约通过或不通过

     1.5系统具体需求

          首先进入登陆界面，可选择登录身份有：

            学生代表

            老师

            管理员

            退出

          每个身份都需要进行验证后，进入子菜单

            学生需要输入：学号、姓名、登陆密码

            老师需要输入：职工号，姓名、登录密码
 
            管理员需要输入：管理员姓名、登录密码

         学生具体功能：

             申请预约   ---预约机房

             查看自身的预约 --- 查看自己的预约状态

             查看所有预约 ---查看全部预约信息以及预约状态

             取消预约 ------ 取消自身的预约，预约成功或审核中的预约均可取消

             注销登录 ----- 退出登录

         教师具体功能：

            查看所有预约 ----查看全部预约信息以及预约状态

            审核预约 --- 对学生预约进行审核

            注销登录 ---- 退出登录

         管理员功能：
             
             添加账号 ----添加学生或教师的账号，需要检测学生编号或教师职工编号是否重复

             查看账号 ---- 可以选择查看学生或教师的全部信息

             查看机房 ---- 查看所有机房的信息

             清空预约 ----- 清空所有预约记录

             注销登录 ----- 退出登录

  2、创建项目

         创建新项目

         添加文件

   3、创建主菜单

          设计主菜单，与用户进行交互

   4、退出功能实现

   5、创建身份类
   
       5.1 身份的基类

          在整个系统中，有三个身份 ： 学生 、 老师和管理员

          三种身份有其共性也有其特性，因此我们可以将三种身份抽象出一个身份基类 identity

          在头文件下创建 identity.h文件

       5.2 学生类

         5.2.1 功能分析

             学生类主要功能是可以通过类中成员函数，实现预约机房操作

             学生类主要功能：
    
                 显示学生操作的菜单界面
 
                 申请预约

                 查看自身预约

                 查看所有预约

                 取消预约

      5.3 老师类

         5.3.1 功能分析

           教师类主要功能是查看学生的预约，并进行审核

               功能：

                 显示教师操作的菜单界面

                 查看所有预约

                 审核预约
 
       5.4  管理员类

          5.4.1 功能分析

             管理员主要功能是对学生和老师进行管理，查看机房信息以及清空预约记录

             功能：
               
               显示管理员操作的菜单界面
                   
               添加账号

               查看账号

               查看机房信息

               清空预约记录
 
  6、登录模块

        6.1 全局文件添加

            不同的身份可能会用到不同的文件操作，我们可以将所有的文件名定义到一个全局的文件中

        6.2 登陆函数封装

            根据用户选择，进入不同身份的身份登录

            在预约系统的cpp文件中，添加全局函数 void LoginIn(string fileName, int type)
 
            参数：

               fileName  ---- 操作的文件名

               type  ------  登录的身份（ 1代表学生，2代表老师，3代表管理员）

       6.3 学生登录实现

           在student.txt文件中添加两条学生信息，用于测试

              1     老王   123 
 
           第一列  代表  学号

           第二列  代表  学生姓名

           第三列  代表  密码

      6.4 老师登录实现

            与学生登录实现同理

      6.5 管理员登录实现功能
 
             与上述两种同理

  7、管理员模块

   7.1 管理员登录和注销

     7.1.1 构造函数

         在Manager类的构造函数中，初始化管理员信息

     7.1.2 管理员子菜单

         在机房预约系统.cpp中当用户登陆的是管理员，添加  管理员菜单接口

         将不同的分支提供出来：

             - 添加账号

             - 查看账号

             - 查看机房

             - 清空数据

             - 注销登录       

           注销登录实现：

            添加成员函数 ： void  managerMenu( Identity * &manager );

      7.1.3 菜单功能实现

            在实现成员函数  void Manager :: operMenu ()

      7.1.4 接口对接

            管理员成功登录后，调用管理员子菜单界面

            在管理员登录验证分支中，添加  managerMenu（）
             
    7.2 添加账号

         功能：给老师或学生添加新的账号

         功能要求： 添加时学生学号不能重复、教师职工号不能重复

     7.2.2 去重操作

         添加新账号时，如果是重复的学生号或职工编号，提示有误

      7.2.2.1 读取信息

           要去除重复的账号，首先要将学生和教师的账号信息获取到程序中，方可检测
 
           在manager.h中添加两个容器，用于存放学生和老师的信息

            添加一个新的成员函数  void initVector()  //初始化容器

      7.2.2.2 去重函数封装

          在manager.h中 添加成员函数 bool checkRepeat(int id, int  type);

      7.2.2.3 bug解决

          bug描述：

              虽然可以检测重复的账号，但是刚添加的账号由于没有更新到容器中，因此不会做检测

              导致刚加入的账号的学号或职工编号，再次添加时依然可以重复

           解决方案：

               在每次添加新账号时，重新初始化容器  || 在添加完毕后，加入初始化容器代码

   7.3 显示账号

           显示学生信息或教师信息

   7.4 查看机房

       7.4.1 添加机房信息

            案例需求：机房一共三个，1号20台机器、2号50台、3号100台
  
       7.4.2 机房创建类

             创建头文件 computerRoom.h 

                创建机房类   属性： 机房编号    机房最大容量

       7.4.3 初始化机房信息

              在Manager管理员类下，添加机房的容器，用于保存机房信息

              在Manager有参构造函数中，初始化机房信息

        7.4.4 显示机房信息

               在showComputer函数中实现

      7.5 清空预约

               清空生成的order.txt预约文件

           7.5.1清空实现功能

               在Manager的cleanFile成员函数中实现          

  8、学生模块

     8.1 学生登录和注销

       8.1.1 构造函数

           初始化Student类中的有参构造

       8.1.2 管理子菜单

           在机房预约系统.cpp中，添加学生菜单接口

           将不同的分支提供出来

             申请预约

             查看我的预约

             查看所有预约

             取消预约

             注销登录
             
         实现注销登录功能

           添加全局函数 void studentMenu(Identity &student)

    8.2 申请预约

         8.2.1 获取机房信息

            在申请预约时，学生可以看到机房的信息，因此我们需要让学生获取到机房的信息

    8.3 显示预约

         8.3.1 创建预约类

             显示预约记录时，需要从文件中获取到所有记录，用来显示，创建预约的类来管理记录以及更新

             创建 orderFile.h 和 orderFile.cpp

         8.3.2 显示自身预约

              首先我们先添加几条预约信息，可以利用程序添加或者手动在txt添加。
    
      8.4 取消预约

            void Student :: cancelOrder() 中实现

 9、教师模块

     9.1 教师登录和注销

        9.1.1构造函数

            初始化教师信息

        9.1.2教师子菜单

            在机房预约系统.cpp中登陆教师身份，添加教师菜单接口

            将不同的分支提供出来

                查看所有预约

                 审核预约

                 注销登录

              添加全局函数 void TeacherMenu ( Identity &teacher）

     9.2 审核预约功能

            教师审核学生的预约，依据实际情况审核预约

            实现审核的成员函数  void Teracher :: validOrder()



