3.8 set/ multiset 容器

  3.8.1 set基本概念

      简介： 

        所有元素都会在插入时自动被排序

     本质：

        set/multiset属于关联式容器，底层结构是用二叉树实现

     set和muliset区别：

        set不允许容器中有重复的元素

        multiset允许容器中有重复的元素

   3.8.2 set构造和赋值

      功能描述 ：

         创建set容器以及赋值

       构造：
  
            set <T>st;           //默认构造函数

            set ( const set &st ); //拷贝构造函数

        赋值：

            set& operator=( const set &st );   //重载等号运算符

    3.8.3 set 大小和交换

       功能描述：

         统计set容器大小以及交换set容器

       函数原型： 
 
          size（）；     //返回容器中元素的数目

          empty（）； //判断容器是否为空

          swap（）；   //交换两个集合容器

    3.8.4 set插入和删除

        功能描述：
     
          set容器进行插入数据和删除数据

        函数原型：

           insert ( elem );         //在容器中插入元素

           clear ( );                   //清除所有元素
 
           erase ( );                 //删除pos迭代器所指的元素，返回下一个元素的迭代器

           erase ( beg, end );  //删除区间（beg，end）的所有元素，返回下一个元素的迭代器

           erase (elem );         //删除容器中值为elem的元素

    3.8.5 set 查找和统计

         功能描述：

           对set容器进行查找数据以及统计数据
 
         函数原型：

            find ( key );            //查找key是否存在，返回该键的元素的迭代器；若不存在，返回set.end（）；

            count (key);           //统计key的元素个数

    3.8.6 set和multiset区别

        功能描述:

            掌握set和multiset的区别

         区别：

           - set 不可以插入重复数据，而multiset可以

           - set插入数据的同时会返回插入结果，表示插入是否成功
 
           - multiset不会检测数据，因此可以插入重复数据

    3.8.7 pair对组创建

        功能描述：
   
            成对出现的数据，利用队组可以返回两个数据

        两种创建方式：

            pair<type , tyep> p ( value1, value2 )；

            pair<type,  type> p = make_pair( value1 ,value2 );

    3.8.8 set容器排序

         学习目标：

            set容器默认排序规则从小到大，掌握如何改变排序规则

         主要技术点：

            利用仿函数，可以改变排序规则