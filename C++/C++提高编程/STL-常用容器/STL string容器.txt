3 STL 常用容器 

   3.1 string容器

   3.1.1 string 基本概念

      本质：string是C++风格的字符串，而string 本质上是一个类

    string和char* 区别：

      char * 是一个指针

      string是一个类，类内部封装了char * ，管理这个字符串，是一个char * 型的容器

    特点：

       string内部封装了很多成员方式

       例如：查找find，拷贝copy，删除delet 替换replace，插入insert 
 
       string管理char*所分布的内存，不用担心复制越界和取值越界等，由类内部负责

   3.1.2 string 构造函数

     构造函数原型：

         string（）;                      // 创建一个空的字符串，例如 string_str;

         string(const char * s);    //是字符串s初始化

         string(const string & str);  // 使用一个string对象初始化另一个string对象

         string (int n,char c ) ;        //使用n个字符c初始化

  5.1.3 string赋值操作

    功能描述：
 
        给string字符串进行赋值

     赋值的函数原型：

        1. string& operator=(const char* s);        //char*类型字符串，赋值给当前的字符串

        2. string& operator=(const string& s);    //把字符串s赋值给当前字符串

        3. string& operator=(char c )；                //字符赋值给当前字符串

        4. string& assign=(const char* s);            //把字符串s赋值给当前字符串

        5. string& assign=(const char* s, int  n);  //把字符串s的前n个字符赋值给当前字符串

        6. string& assign=(const string & s);        //把字符串s赋值给当前字符串

        7 string& assign=(int n , char  c);              //用n个字符c赋值给当前字符串
 
3.1.5 string查找和替换

    功能描述:

        查找 : 查找指定字符串是否存在

        替换: 在指定的位置替换字符串

      函数原型:

       int find(const string& str, int pos = 0) const; //查找str第一次出现位置,从pos开始查找

       int find(const char* s, int pos = 0) const;        //查找s第一次出现位置,从pos开始查找

       int find(const char*  s, int pos, int n) const;     // 从pos位置查找s的前n个字符第一次位置

       int find(const char c, int pos=0) const;           //查找字符C第一次出现位置

       int find(const string& str, int pos =npos)const; // 查找str最后一次位置，从pos开始查找

       int find(const char *s, int pos =npos)const;      //  查找s最后一次出现位置，从pos开始查找

       int find(const char *s, int pos ,int n);                 //从pos查找s的前n个字符最后一次位置

       int fied(const char c, int pos=0)const;              //  查找字符c最后一次出现位置

       string& replace(int pos, int n, const string& str); //替换从pos开始n个字符为字符串str

       string& replace(int pos, int n, const const char* s); //替换pos开始的n个字符为字符串s

   
   3.1.6 string字符串比较 

     功能描述：

         字符串之间的比较

       比较方式：

           字符串比较是按字符的 ASCII码进行对比

         =   返回  0
 
         >   返回  1
 
         <   返回  -1

       函数原型：

             int  compare( const  string  & s );   //与字符串s比较
 
             int  compare( const  char  *s );       //与字符串s比较
            
   3.1.7 string字符存取

      string 中单个字符存取方式有两种：
 
         char& operator[ ] ( int  n);  //通过[ ] 方式取字符

         char& at（int  n）；           //通过at方法获取字符

  
   3.1.8 string插入和删除

     功能描述：
 
        对string字符串进行插入和删除字符操作

     函数原型：

        string&  insert ( int pos,  const char*  s);   //插入字符串 

         string&  insert ( int pos,  const  string&  str);  //插入字符串

         string&  insert ( int pos,  int  n , char  c);    //从指定位置插入n个字符c

         string&  erase ( int pos, int  n = npos);      //删除从pos开始的n个字符

   3.1.9 string子串

     功能描述：
                      从字符串中获取想要的子串

      函数原型：

        string  substr （int pos = 0，int  n = npos）const； //返回由pos开始的n个字符组成的字符串 



                                         

         
                


