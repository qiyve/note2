3.9 map/multimap容器

    3.9.1 map基本概念

       简介：

        map中所有元素都是pair

        pair中的第一个元素为key (键值)，起到索引作用，第二个元素为( value )实值

        所有元素都会根据元素的键值自动排序

       本质：

         map/ multimap属于关联式容器，底层结构是用二叉树实现

       优点：
 
          可以根据key值，快速找到value值
 
       map和multimap区别：

           map不允许容器中有重复key值元素

           multimap允许容器中有重复key值元素

   3.9.2 map构造和赋值

      功能描述：
 
           对map容器进行构造和赋值操作

      函数原型：

           map< T1, T2 > mp ;     //map默认构造函数

           map（const  map &mp；//拷贝构造函数

       赋值：

          map& operator= (const map &mp); //重载等号操作符

   3.9.3 map大小和交换

      功能描述：

          统计map容器大小以及交换map容器

       函数原型:
 
           size（）；          //返回容器中元素的数目

           empty ( );           //判断容器是否为空

           swap （）;          //交换两个集合容器

    3.9.4 map插入和删除

       功能描述：

           map容器进行插入数据和删除数据

       函数原型：

             insert( elem );       //在容器中插入元素

             clear ();                // 清除所有元素

             erase( pos);          //删除pos迭代器所指的元素，返回下一个元素的迭代器

             erase(beg , end ); //删除区间（beg，end）的所有元素，返回下一个元素的迭代器

             erase（key）;        //删除容器中值为key的元素

    3.9.5 map 查找和统计

        功能描述：

            对map容器进行查找数据以及统计数据

         函数原型：

               find（key）； // 查找key是否存在，若存在，返回该键的元素的迭代器；若不存在，返回set.end();

               count( key);     //统计key的元素个数

    3.9.6 map容器排序

          学习目标：

             map容器默认排序规则为 按照key值进行 从小到大排序， 掌握如何改变排序规则

         主要技术点：

             利用仿函数，可以改变排序规则


3.10 案例 员工分组

    3.10.1 案例描述：

           公司今天招聘了10个员工, (ABCDEFGHIJ) ,10名员工进入公司后，需要指派员工在那个部门工作

           员工信息有： 姓名 、工资组成；  部门分为：策划、美工、研发

           随机给10名员工分配部门和工资

           通过multimap 进行信息的插入  key(部门编号）value (员工)

           分配部门显示员工信息

    3.10.2 实现步骤

          1.创建10名员工，放到vector中

          2.遍历vector容器，取出每个员工，进行随机分组

          3.分组后，将员工部门编号作为key，具体员工作为vector，放入multimap容器中，

          4.分部门显示员工信息

  

        

   



